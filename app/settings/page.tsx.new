"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuth } from "@/contexts/auth-context";
import AppLayout from "@/components/layout/app-layout";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger
} from "@/components/ui/tabs";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Settings, User, Lock, Bell, Shield, LogOut, ChevronLeft } from "lucide-react";
import { motion } from "framer-motion";
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from "@/components/ui/alert-dialog";

export default function SettingsPage() {
  const { currentUser, userData, showAuthToast, logout } = useAuth();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState("account");

  // Redirect if not logged in
  useEffect(() => {
    if (!currentUser) {
      router.push('/login');
    }
  }, [currentUser, router]);

  // Handle logout
  const handleLogout = async () => {
    try {
      await logout();
      router.push('/login');
    } catch (error) {
      console.error("Error logging out:", error);
      showAuthToast("Failed to log out", "error");
    }
  };

  return (
    <AppLayout hideHeader>
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.3 }}
        className="container max-w-md py-4 md:py-8 px-2"
      >
        {/* Back Button - Mobile Friendly */}
        <motion.div 
          initial={{ x: -20, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{ delay: 0.1, type: "spring", stiffness: 300 }}
          className="flex items-center mb-6"
        >
          <Button 
            variant="ghost" 
            size="sm" 
            onClick={() => router.back()}
            className="flex items-center gap-1 hover:bg-transparent p-0 group"
          >
            <ChevronLeft className="w-5 h-5 group-hover:translate-x-[-2px] transition-transform" />
            <span className="ml-1 group-hover:text-blue-600 transition-colors">Back</span>
          </Button>
        </motion.div>
        
        {/* Main Content */}
        <motion.div 
          initial={{ y: 20, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{ delay: 0.2, type: "spring", stiffness: 300, damping: 25 }}
          className="flex flex-col gap-4"
        >
          {/* Settings Card */}
          <Card className="shadow-md border-0 overflow-hidden bg-gradient-to-br from-white to-gray-50">
            <CardHeader className="pb-2 bg-gradient-to-r from-gray-50 to-white">
              <CardTitle className="text-xl font-bold text-gray-800">Settings</CardTitle>
              <CardDescription className="text-gray-500">
                Manage your account settings and preferences
              </CardDescription>
            </CardHeader>
            <CardContent className="p-0">
              <Tabs 
                value={activeTab} 
                onValueChange={setActiveTab}
                className="w-full"
              >
                <TabsList className="flex flex-col w-full space-y-0 p-0 bg-transparent">
                  <motion.div 
                    whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}
                    onClick={() => router.push('/edit-profile')}
                    className="cursor-pointer"
                  >
                    <div 
                      className="w-full justify-start px-4 py-3 border-b text-left rounded-none flex items-center"
                    >
                      <User className="mr-3 h-5 w-5 text-gray-500" />
                      <span className="font-medium">Edit Profile</span>
                    </div>
                  </motion.div>
                  
                  <motion.div whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}>
                    <TabsTrigger 
                      value="account"
                      className="w-full justify-start px-4 py-3 border-b text-left rounded-none data-[state=active]:bg-blue-50/50 data-[state=active]:text-blue-600 transition-all duration-200"
                    >
                      <div className="flex items-center">
                        <Settings className="mr-3 h-5 w-5 text-gray-500" />
                        <span className="font-medium">Account</span>
                      </div>
                    </TabsTrigger>
                  </motion.div>
                  
                  <motion.div whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}>
                    <TabsTrigger 
                      value="password"
                      className="w-full justify-start px-4 py-3 border-b text-left rounded-none data-[state=active]:bg-blue-50/50 data-[state=active]:text-blue-600 transition-all duration-200"
                    >
                      <div className="flex items-center">
                        <Lock className="mr-3 h-5 w-5 text-gray-500" />
                        <span className="font-medium">Password</span>
                      </div>
                    </TabsTrigger>
                  </motion.div>
                  
                  <motion.div whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}>
                    <TabsTrigger 
                      value="notifications"
                      className="w-full justify-start px-4 py-3 border-b text-left rounded-none data-[state=active]:bg-blue-50/50 data-[state=active]:text-blue-600 transition-all duration-200"
                    >
                      <div className="flex items-center">
                        <Bell className="mr-3 h-5 w-5 text-gray-500" />
                        <span className="font-medium">Notifications</span>
                      </div>
                    </TabsTrigger>
                  </motion.div>
                  
                  <motion.div whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}>
                    <TabsTrigger 
                      value="privacy"
                      className="w-full justify-start px-4 py-3 border-b text-left rounded-none data-[state=active]:bg-blue-50/50 data-[state=active]:text-blue-600 transition-all duration-200"
                    >
                      <div className="flex items-center">
                        <Shield className="mr-3 h-5 w-5 text-gray-500" />
                        <span className="font-medium">Privacy</span>
                      </div>
                    </TabsTrigger>
                  </motion.div>
                  
                  <motion.div 
                    whileHover={{ backgroundColor: "rgba(243, 244, 246, 0.8)" }}
                    className="border-b"
                  >
                    <AlertDialog>
                      <AlertDialogTrigger asChild>
                        <button className="w-full text-left px-4 py-3 flex items-center hover:text-red-500 transition-colors">
                          <LogOut className="mr-3 h-5 w-5 text-gray-500" />
                          <span className="font-medium">Log out</span>
                        </button>
                      </AlertDialogTrigger>
                      <AlertDialogContent>
                        <AlertDialogHeader>
                          <AlertDialogTitle>Log out of Zetaagram?</AlertDialogTitle>
                          <AlertDialogDescription>
                            You can always log back in at any time.
                          </AlertDialogDescription>
                        </AlertDialogHeader>
                        <AlertDialogFooter>
                          <AlertDialogCancel>Cancel</AlertDialogCancel>
                          <AlertDialogAction 
                            onClick={handleLogout}
                            className="bg-red-500 text-white hover:bg-red-600"
                          >
                            Log out
                          </AlertDialogAction>
                        </AlertDialogFooter>
                      </AlertDialogContent>
                    </AlertDialog>
                  </motion.div>
                </TabsList>
              </Tabs>
            </CardContent>
          </Card>

          {/* Content Area */}
          <div className="mt-4">
            <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
              {/* Account Tab */}
              <TabsContent value="account">
                <Card>
                  <CardHeader>
                    <CardTitle>Account Settings</CardTitle>
                    <CardDescription>
                      Manage your account details and preferences
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="space-y-1">
                      <Label htmlFor="email" className="text-sm font-medium">Email</Label>
                      <div className="p-2 bg-gray-50 rounded text-sm">{userData?.email}</div>
                    </div>
                    
                    <div className="pt-4 border-t">
                      <h3 className="text-sm font-medium mb-4">Account Preferences</h3>
                      <div className="space-y-4">
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label htmlFor="dark-mode">Dark Mode</Label>
                            <p className="text-sm text-muted-foreground">
                              Enable dark mode for the application
                            </p>
                          </div>
                          <Switch id="dark-mode" />
                        </div>
                        
                        <div className="flex items-center justify-between">
                          <div className="space-y-0.5">
                            <Label htmlFor="language">Language</Label>
                            <p className="text-sm text-muted-foreground">
                              Currently set to English
                            </p>
                          </div>
                          <Button variant="outline" size="sm">Change</Button>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Password Tab */}
              <TabsContent value="password">
                <Card>
                  <CardHeader>
                    <CardTitle>Password Settings</CardTitle>
                    <CardDescription>
                      Update your password to keep your account secure
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <p className="text-sm text-muted-foreground">
                      Password management will be implemented soon.
                    </p>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Notifications Tab */}
              <TabsContent value="notifications">
                <Card>
                  <CardHeader>
                    <CardTitle>Notification Preferences</CardTitle>
                    <CardDescription>
                      Control when and how you want to be notified
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>Push Notifications</Label>
                        <p className="text-sm text-muted-foreground">
                          Receive push notifications on your device
                        </p>
                      </div>
                      <Switch />
                    </div>
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>Email Notifications</Label>
                        <p className="text-sm text-muted-foreground">
                          Receive email notifications about account activity
                        </p>
                      </div>
                      <Switch />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Privacy Tab */}
              <TabsContent value="privacy">
                <Card>
                  <CardHeader>
                    <CardTitle>Privacy Settings</CardTitle>
                    <CardDescription>
                      Control your privacy and visibility on the platform
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>Private Account</Label>
                        <p className="text-sm text-muted-foreground">
                          Only approved followers can see your posts
                        </p>
                      </div>
                      <Switch />
                    </div>
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>Activity Status</Label>
                        <p className="text-sm text-muted-foreground">
                          Show when you're active on the platform
                        </p>
                      </div>
                      <Switch defaultChecked />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>
        </motion.div>
      </motion.div>
    </AppLayout>
  );
}
